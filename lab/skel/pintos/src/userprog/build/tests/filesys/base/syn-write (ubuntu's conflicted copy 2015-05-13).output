Copying tests/filesys/base/syn-write into /tmp/gdD0M5hl01.dsk...
Copying tests/filesys/base/child-syn-wrt into /tmp/gdD0M5hl01.dsk...
Writing command line to /tmp/xtOlgyR_hz.dsk...
qemu-system-i386 -hda /tmp/xtOlgyR_hz.dsk -hdb /tmp/O48jfCGSoY.dsk -hdc /tmp/gdD0M5hl01.dsk -m 4 -net none -monitor null -nographic
Kernel command line: -q -f put syn-write put child-syn-wrt run syn-write
Pintos booting with 4,088 kB RAM...
371 pages available in kernel pool.
371 pages available in user pool.
Calibrating timer...  419,020,800 loops/s.
hd0:0: detected 161 sector (80 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 4,032 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 223 sector (111 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'syn-write' into the file system...
Putting 'child-syn-wrt' into the file system...
Executing 'syn-write':
(syn-write) begin
(syn-write) create "stuff"
(syn-write) exec child 1 of 10: "child-syn-wrt 0"
child-syn-wrt: exit(0)
(syn-write) exec child 2 of 10: "child-syn-wrt 1"
Page fault at 0xccccccd0: not present error writing page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc01076d2
 cr2=ccccccd0 error=00000002
 eax=c011b06c ebx=c011b06c ecx=cccccccc edx=c011b06c
 esi=c0114e20 edi=c011b000 esp=00000001 ebp=c0124e94
 cs=0008 ds=0010 es=0010 ss=0001
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
backtrace  0xc0107279 0xc010a6c8 0xc010a774 0xc01018ca 0xc0101a05 0xc01076d2 0xc010782f 0xc01035c6 0xc010be30 0xc010b64a 0xc010aafe 0xc01018ca 0xc0101a05 0x804a6e3 0x804812b 0x80488d7.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Simply copy-paste the backtrace command line above.
They will not get the chance to complete.
Kernel PANIC recursion at ../../threads/synch.c:197 in lock_acquire().
They will not get the chance to complete.
Page fault at 0xcccccee0: not present error reading # Preparing to power off...
Kernel command line: -q -f put syn-write put child-syn-wrt run syn-write
Pintos booting with 4,088 kB RAM...
371 pages available in kernel pool.
371 pages available in user pool.
Calibrating timer...  419,020,800 loops/s.
hd0:0: detected 161 sector (80 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 4,032 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 223 sector (111 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'syn-write' into the file system...
Putting 'child-syn-wrt' into the file system...
Executing 'syn-write':
(syn-write) begin
(syn-write) create "stuff"
(syn-write) exec child 1 of 10: "child-syn-wrt 0"
Page fault at 0xccccccd0: not present error writing page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc01076d2
 cr2=ccccccd0 error=00000002
 eax=c011b05c ebx=c011b05c ecx=cccccccc edx=c011b05c
 esi=c0114e20 edi=c011b000 esp=00000001 ebp=c0124e94
 cs=0008 ds=0010 es=0010 ss=0001
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
backtrace  0xc0107279 0xc010a6c8 0xc010a774 0xc01018ca 0xc0101a05 0xc01076d2 0xc010782f 0xc01035c6 0xc010be30 0xc010b64a 0xc010aafe 0xc01018ca 0xc0101a05 0x804a6e3 0x804812b 0x80488d7.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Simply copy-paste the backtrace command line above.
They will not get the chance to complete.
Kernel PANIC recursion at ../../threads/synch.c:197 in lock_acquire().
They will not get the chance to complete.
Page fault at 0xcccccee0: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc01028ca
Kernel command line: -q -f put syn-write put child-syn-wrt run syn-write
Pintos booting with 4,088 kB RAM...
371 pages available in kernel pool.
371 pages available in user pool.
Calibrating timer...  419,020,800 loops/s.
hd0:0: detected 161 sector (80 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 4,032 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 223 sector (111 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'syn-write' into the file system...
Putting 'child-syn-wrt' into the file system...
Executing 'syn-write':
(syn-write) begin
(syn-write) create "stuff"
(syn-write) exec child 1 of 10: "child-syn-wrt 0"
child-syn-wrt: exit(0)
(syn-write) exec child 2 of 10: "child-syn-wrt 1"
Page fault at 0xccccccd0: not present error writing page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc01076d2
 cr2=ccccccd0 error=00000002
 eax=c011b06c ebx=c011b06c ecx=cccccccc edx=c011b06c
 esi=c0114e20 edi=c011b000 esp=00000001 ebp=c0124e94
 cs=0008 ds=0010 es=0010 ss=0001
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
backtrace  0xc0107279 0xc010a6c8 0xc010a774 0xc01018ca 0xc0101a05 0xc01076d2 0xc010782f 0xc01035c6 0xc010be30 0xc010b64a 0xc010aafe 0xc01018ca 0xc0101a05 0x804a6e3 0x804812b 0x80488d7.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Simply copy-paste the backtrace command line above.
They will not get the chance to complete.
Kernel PANIC recursion at ../../threads/synch.c:197 in lock_acquire().
They will not get the chance to complete.
Page fault at 0xcccccee0: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Except# Preparing to power off...
Kernel command line: -q -f put syn-write put child-syn-wrt run syn-write
Pintos booting with 4,088 kB RAM...
371 pages available in kernel pool.
371 pages available in user pool.
Calibrating timer...  419,020,800 loops/s.
hd0:0: detected 161 sector (80 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 4,032 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 223 sector (111 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'syn-write' into the file system...
Putting 'child-syn-wrt' into the file system...
Executing 'syn-write':
(syn-write) begin
(syn-write) create "stuff"
(syn-write) exec child 1 of 10: "child-syn-wrt 0"
child-syn-wrt: exit(0)
(syn-write) exec child 2 of 10: "child-syn-wrt 1"
Page fault at 0xccccccd0: not present error writing page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception) at eip=0xc01076d2
 cr2=ccccccd0 error=00000002
 eax=c011b06c ebx=c011b06c ecx=cccccccc edx=c011b06c
 esi=c0114e20 edi=c011b000 esp=00000001 ebp=c0124e94
 cs=0008 ds=0010 es=0010 ss=0001
Kernel PANIC at ../../userprog/exception.c:100 in kill(): Kernel bug - unexpected interrupt in kernel
backtrace  0xc0107279 0xc010a6c8 0xc010a774 0xc01018ca 0xc0101a05 0xc01076d2 0xc010782f 0xc01035c6 0xc010be30 0xc010b64a 0xc010aafe 0xc01018ca 0xc0101a05 0x804a6e3 0x804812b 0x80488d7.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Simply copy-paste the backtrace command line above.
They will not get the chance to complete.
Kernel PANIC recursion at ../../threads/synch.c:197 in lock_acquire().
They will not get the chance to complete.
Page fault at 0xcccccee0: not present error reading page in kernel context.
Interrupt 0x0e (#PF Page-Fault Exception)# Preparing to power off...
Kernel command line: -q -f put syn-write put child-syn-wrt run syn-write
Pintos booting with 4,088 kB RAM...
371 pages available in kernel pool.
371 pages available in user pool.
Calibrating timer...  Simulation terminated due to kernel panic.
