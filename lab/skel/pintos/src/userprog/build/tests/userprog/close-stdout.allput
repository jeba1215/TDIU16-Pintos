Copying tests/userprog/close-stdout into /tmp/Dp1Gyt975Y.dsk...
Writing command line to /tmp/YF4LKW9zll.dsk...
qemu-system-i386 -hda /tmp/YF4LKW9zll.dsk -hdb /tmp/3Zi7BCuqKy.dsk -hdc /tmp/Dp1Gyt975Y.dsk -m 4 -net none -monitor null -nographic
Kernel command line: -q -f put close-stdout run close-stdout
Pintos booting with 4,088 kB RAM...
371 pages available in kernel pool.
371 pages available in user pool.
# main#1: thread_create("idle", ...) RETURNS 2
Calibrating timer...  122,060,800 loops/s.
hd0:0: detected 161 sector (80 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 4,032 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 99 sector (49 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'close-stdout' into the file system...
Executing 'close-stdout':
# main#1: process_execute("close-stdout") ENTERED
# Command line is valid
#  parent is: 0
# main#1: thread_create("close-stdout", ...) RETURNS 3
# after create_thread 1, thread_id: 3
# close-stdout#3: start_process("close-stdout") ENTERED
# Loading file: close-stdout
# Loading done
# close-stdout#3: start_process(...): load returned 1
# close-stdout#3: start_process("close-stdout") DONE
(close-stdout) begin
(close-stdout) end
# close-stdout#3: process_cleanup() ENTERED
close-stdout: exit(0)
# close-stdout#3: process_cleanup() DONE with status 0
# after create_thread 2
# after create_thread 3
# Command Line: close-stdout
# after create_thread 4
# main#1: process_execute("close-stdout") RETURNS 2
# main#0: process_wait(2) ENTERED
# main#1: process_wait(2) RETURNS 0
Execution of 'close-stdout' complete.
# Preparing to power off...
Timer: 111 ticks
Thread: 1 idle ticks, 97 kernel ticks, 13 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 59 reads, 206 writes
hd1:0: 99 reads, 0 writes
Console: 1608 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
