Copying tests/userprog/exec-multiple into /tmp/jAVSaKfkaQ.dsk...
Copying tests/userprog/child-simple into /tmp/jAVSaKfkaQ.dsk...
Writing command line to /tmp/Zf9yeRImVY.dsk...
qemu-system-i386 -hda /tmp/Zf9yeRImVY.dsk -hdb /tmp/8eubylwXGN.dsk -hdc /tmp/jAVSaKfkaQ.dsk -m 4 -net none -monitor null -nographic
Kernel command line: -q -f put exec-multiple put child-simple run exec-multiple
Pintos booting with 4,088 kB RAM...
371 pages available in kernel pool.
371 pages available in user pool.
# main#1: thread_create("idle", ...) RETURNS 2
Calibrating timer...  54,169,600 loops/s.
hd0:0: detected 161 sector (80 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 4,032 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 198 sector (99 kB) disk, model "QEMU HARDDISK", serial "QM00003"
Formatting file system...done.
Boot complete.
Putting 'exec-multiple' into the file system...
Putting 'child-simple' into the file system...
Executing 'exec-multiple':
# main#1: process_execute("exec-multiple") ENTERED
# Command line is valid
#  parent is: 0
# main#1: thread_create("exec-multiple", ...) RETURNS 3
# after create_thread 1, thread_id: 3
# exec-multiple#3: start_process("exec-multiple") ENTERED
# Loading file: exec-multiple
# Loading done
# exec-multiple#3: start_process(...): load returned 1
# exec-multiple#3: start_process("exec-multiple") DONE
(exec-multiple) begin
# exec-multiple#3: process_execute("child-simple") ENTERED
# Command line is valid
#  parent is: 2
# exec-multiple#3: thread_create("child-simple", ...) RETURNS 4
# after create_thread 1, thread_id: 4
# after create_thread 2
# after create_thread 3
# Command Line: exec-multiple
# after create_thread 4
# main#1: process_execute("exec-multiple") RETURNS 2
# main#0: process_wait(2) ENTERED
# child-simple#4: start_process("child-simple") ENTERED
# Loading file: child-simple
# Loading done
# child-simple#4: start_process(...): load returned 1
# child-simple#4: start_process("child-simple") DONE
(child-simple) run
# child-simple#4: process_cleanup() ENTERED
child-simple: exit(81)
# child-simple#4: process_cleanup() DONE with status 81
# after create_thread 2
# after create_thread 3
# Command Line: child-simple
# after create_thread 4
# exec-multiple#3: process_execute("child-simple") RETURNS 3
# exec-multiple#2: process_wait(3) ENTERED
# exec-multiple#3: process_wait(3) RETURNS 81
# exec-multiple#3: process_execute("child-simple") ENTERED
# Command line is valid
#  parent is: 2
# exec-multiple#3: thread_create("child-simple", ...) RETURNS 5
# after create_thread 1, thread_id: 5
# child-simple#5: start_process("child-simple") ENTERED
# Loading file: child-simple
# Loading done
# child-simple#5: start_process(...): load returned 1
# child-simple#5: start_process("child-simple") DONE
(child-simple) run
# child-simple#5: process_cleanup() ENTERED
child-simple: exit(81)
# child-simple#5: process_cleanup() DONE with status 81
# after create_thread 2
# after create_thread 3
# Command Line: child-simple
# after create_thread 4
# exec-multiple#3: process_execute("child-simple") RETURNS 3
# exec-multiple#2: process_wait(3) ENTERED
# exec-multiple#3: process_wait(3) RETURNS 81
# exec-multiple#3: process_execute("child-simple") ENTERED
# Command line is valid
#  parent is: 2
# exec-multiple#3: thread_create("child-simple", ...) RETURNS 6
# after create_thread 1, thread_id: 6
# child-simple#6: start_process("child-simple") ENTERED
# Loading file: child-simple
# Loading done
# child-simple#6: start_process(...): load returned 1
# child-simple#6: start_process("child-simple") DONE
(child-simple) run
# child-simple#6: process_cleanup() ENTERED
child-simple: exit(81)
# child-simple#6: process_cleanup() DONE with status 81
# after create_thread 2
# after create_thread 3
# Command Line: child-simple
# after create_thread 4
# exec-multiple#3: process_execute("child-simple") RETURNS 3
# exec-multiple#2: process_wait(3) ENTERED
# exec-multiple#3: process_wait(3) RETURNS 81
# exec-multiple#3: process_execute("child-simple") ENTERED
# Command line is valid
#  parent is: 2
# exec-multiple#3: thread_create("child-simple", ...) RETURNS 7
# after create_thread 1, thread_id: 7
# child-simple#7: start_process("child-simple") ENTERED
# Loading file: child-simple
# Loading done
# child-simple#7: start_process(...): load returned 1
# child-simple#7: start_process("child-simple") DONE
(child-simple) run
# child-simple#7: process_cleanup() ENTERED
child-simple: exit(81)
# child-simple#7: process_cleanup() DONE with status 81
# after create_thread 2
# after create_thread 3
# Command Line: child-simple
# after create_thread 4
# exec-multiple#3: process_execute("child-simple") RETURNS 3
# exec-multiple#2: process_wait(3) ENTERED
# exec-multiple#3: process_wait(3) RETURNS 81
(exec-multiple) end
# exec-multiple#3: process_cleanup() ENTERED
exec-multiple: exit(0)
# exec-multiple#3: process_cleanup() DONE with status 0
# main#1: process_wait(2) RETURNS 0
Execution of 'exec-multiple' complete.
# Preparing to power off...
Timer: 334 ticks
Thread: 1 idle ticks, 182 kernel ticks, 152 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 230 reads, 406 writes
hd1:0: 198 reads, 0 writes
Console: 4900 characters output
Keyboard: 0 keys pressed
Exception: 0 page faults
Powering off...
